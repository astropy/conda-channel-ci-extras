# The language in this case has no bearing - we are going to be making use of "conda" for a
# python distribution for the scientific python stack.
language: c

os:
  - linux
  - osx

env:
    global:
        - DESTINATION_CONDA_CHANNEL="astropy-ci-extras"
        - TARGET_ARCH="x64"
        - CONDA_INSTALL_LOCN="${HOME}/miniconda"

        # Defines BINSTAR_TOKEN for your binstar channel
        - secure: "WKr7RtLRuWln18nDNO7aWBJrcNUg8srYM3hotv7ozABZj2WSiHSG2G1v72MYnZX/6E3Hh1w7fN7IcB2u9XIEHXrJftjC0/xr4KCTrucOWwkRXRGV+CO9mkremI1QYuKhvAyRlSpmWZvp+AHDTcUmTR9oGP5ZEPY5zh63F+UTZqLuApmuBnlatYf07MmCn9/WC1wRGuL+da9JQjKoJSwgpSp9gmxjhiRQiY7X+/lPfTQXXAAMuhPIRLagEs64rutRqKkVOigwOjElpE+zBcPXS7ofs8lo4SIZq2j0FtEjVrCIxBwPTjxbuVDv4EK3/OHAxcrcXjwt1p4Qcx6wovUQ2C9W4avk4NTV0u05Yur3BzXOkRY4sv1loS7OHjbaZwOy6cb90v8ZIaPSFNoJ2oL2KmStdfb5VvdcY2KqdpUSLAB2SCSuOQhMDBOKmUoZBCFJIQ24ZUW7TtRnKBDxgr1+V6+z1CawUNia0juQDbJPhwFGFcQIEQ/d1AjWqHOBij1jfm7322CFJp5wWr0V2upM6HUI/sHIfmVBabK6eHhAztk4fCdlc/YmYYC39nCjhAeB8OrtA8jadmrNOd1uRalQd4qvC4HB0+VgjBm5DbQoKPRQUESEbDyxqqmVJcEBcDRPIlTdGjyUzivRThK+C1dZwlZwG7MF/DXz+nm1MH3xoEI="

        # The python build restriction MUST be set at the moment, though it
        # can have any value. The setting below avoids known-bad builds on
        # python 2.6 and 3.3 for some packages.
        - PYTHON_BUILD_RESTRICTIONS="2.7*|>=3.4"

        # The numpy build restrictions can be empty.
        - NUMPY_BUILD_CONDITION="--matrix-condition=numpy <1.11"

        # Define a numpy version that will be ignored anyway...
        - CONDA_NPY="1.11"

        # This controls how many older numpy versions are built.
        - MAX_NUMPY_MINOR_VERSIONS="5"

# Matrix is fully specified (for now) by os versions

install:
    # Install and set up miniconda.
    - if [ $TRAVIS_OS_NAME == "linux" ]; then wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh; fi
    - if [ $TRAVIS_OS_NAME == "osx" ]; then wget http://repo.continuum.io/miniconda/Miniconda-latest-MacOSX-x86_64.sh -O miniconda.sh; fi
    - bash miniconda.sh -b -p $CONDA_INSTALL_LOCN
    - export PATH=${CONDA_INSTALL_LOCN}/bin:$PATH
    - conda config --set always_yes true

    - conda update --quiet conda

    # Install a couple of dependencies we need for sure.
    - conda install --quiet --yes astropy anaconda-client jinja2 cython pycrypto

    - conda config --add channels astropy
    - conda config --add channels conda-forge

    - conda install -c conda-forge conda-build-all

    # Finally, install extruder
    - conda install -c astropy extruder

    # Build and upload, if necessary, custom version of conda-build for now (need to be able to pass
    # options to setup.py)
    - conda build-all --inspect-channels="$DESTINATION_CONDA_CHANNEL" --upload-channels="$DESTINATION_CONDA_CHANNEL" --matrix-condition="python $PYTHON_BUILD_RESTRICTIONS" conda-build.recipe
    # Install the custom version, after installing openssl and psutil
    - conda install --force openssl=1.0.2d psutil
    - conda install -c astropy-ci-extras --override-channels --force conda-build

script:
    # Get ready to build.
    - extrude_recipes requirements.yml
    # Packages are uploaded as they are built.
    - if [[ -d recipes ]]; then conda build-all --matrix-max-n-minor-versions="$MAX_NUMPY_MINOR_VERSIONS" --inspect-channels="$DESTINATION_CONDA_CHANNEL" --upload-channels="$DESTINATION_CONDA_CHANNEL" --matrix-condition="python $PYTHON_BUILD_RESTRICTIONS" "$NUMPY_BUILD_CONDITION" recipes; fi
